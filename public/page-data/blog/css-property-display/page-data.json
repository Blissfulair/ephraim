{"componentChunkName":"component---src-templates-post-jsx","path":"/blog/css-property-display/","result":{"data":{"wordpressPost":{"title":"CSS Property: Display","excerpt":"<p>The display property is one of the most commonly used properties in CSS. Every HTML element on a web page is a rectangular box. The display property determines how these boxes will behave. It is CSS&#8217;s most important property for controlling layout. Every element has a default display value depending on what type of element [&hellip;]</p>\n","content":"\n<p>The display property is one of the most commonly used properties in CSS.</p>\n\n\n\n<p>Every HTML element on a web page is a rectangular box. The display property determines how these boxes will behave. It is CSS&#8217;s most important property for controlling layout. Every element has a default display value depending on what type of element it is. The default value for most elements is usually&nbsp;<code>block</code>&nbsp;or&nbsp;<code>inline</code>.</p>\n\n\n\n<p>Here are some commonly used display values:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>    div {\n        display: inline;       \n        display: inline-block;  \n        display: block;        \n        display: none;                \n    }</code></pre>\n\n\n\n<p>Let us discuss each of them.</p>\n\n\n\n<h3>Display: Inline</h3>\n\n\n\n<p>This is the default value for many HTML elements.</p>\n\n\n\n<p>Inline elements are displayed side by side (inline or horizontally) on a page. They take only as much space as needed on a page. They do not accept width or height properties and top or bottom margin/padding. Wrapping text in this element does not break the flow of the text.</p>\n\n\n\n<p>Some examples are&nbsp;<code>span</code>,&nbsp;<code>em</code>,&nbsp;<code>b</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p> The sky above is &lt;span> blue.&lt;/span>\n    &lt;b>&lt;i>Roses&lt;/i>&lt;/b> are &lt;span> red.&lt;/span>\n&lt;/p></code></pre>\n\n\n\n<p>It will result in the following (styles added by me for clarity).</p>\n\n\n\n<p>The sky above is&nbsp;blue.&nbsp;<strong><em>Roses</em></strong>&nbsp;are&nbsp;red.</p>\n\n\n\n<h3>Display: Inline-block</h3>\n\n\n\n<p>Inline-block elements are like inline elements but they have width or height properties. Top and bottom margin/padding are also respected. A common use of this display value is in placing navigation elements side by side.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"http://dukstack-api.test/wp-content/uploads/2019/10/20160522_072618-499x1024.jpg\" alt=\"\" class=\"wp-image-12\" srcset=\"http://dukstack-api.test/wp-content/uploads/2019/10/20160522_072618-499x1024.jpg 499w, http://dukstack-api.test/wp-content/uploads/2019/10/20160522_072618-146x300.jpg 146w, http://dukstack-api.test/wp-content/uploads/2019/10/20160522_072618-768x1577.jpg 768w, http://dukstack-api.test/wp-content/uploads/2019/10/20160522_072618-1568x3220.jpg 1568w\" sizes=\"(max-width: 499px) 100vw, 499px\" /></figure>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul>\n    &lt;li>Home&lt;/li>\n    &lt;li>About&lt;/li>\n    &lt;li>Blog&lt;/li>\n    &lt;li>Contact&lt;/li>\n&lt;/ul>\n\n&lt;style>\n    ul {\n        padding: 0;\n        list-style-type: none;\n        background-color: #e0e0e8;\n    }\n\n    li {\n        display: inline-block;\n        padding: 10px 20px;\n    }\n&lt;/style></code></pre>\n\n\n\n<p>This will result in:</p>\n\n\n\n<ul><li>Home</li><li>About</li><li>Blog</li><li>Contact</li></ul>\n\n\n\n<h3>Display: Block</h3>\n\n\n\n<p>Block level elements always start a new line and take up the full width(horizontal space) available. This display type also allows us to specify the width and height of the element. With&nbsp;<code>display: block</code>, the new element always starts on a new line. It cannot be used to wrap elements around other elements.</p>\n\n\n\n<p>Examples of elements with default block display type are&nbsp;<code>&lt;p&gt;</code>,&nbsp;<code>&lt;h1&gt;</code>&nbsp;&#8211;&nbsp;<code>&lt;/h6&gt;</code>,&nbsp;<code>&lt;div&gt;</code>,&nbsp;<code>&lt;form&gt;</code>,&nbsp;<code>&lt;section&gt;</code>&nbsp;etc.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>    &lt;p>This is a block level element&lt;p>\n    &lt;span>Hello&lt;/span>\n    &lt;div> I am another block element&lt;/div></code></pre>\n\n\n\n<p>This will result in:</p>\n\n\n\n<p>This is a block level element</p>\n\n\n\n<p>HelloI am another block element</p>\n\n\n\n<h3>Display: None</h3>\n\n\n\n<p>This display type is used to visually hide elements from the user interface without deleting the element. It is also ignored by screen readers. Let us repeat the previous example, this time giving the span a style of display: none.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>    &lt;p>This is a block level element&lt;p>\n    &lt;span style=\"display: none\">Hello&lt;/span>\n    &lt;div> I am another block element&lt;/div></code></pre>\n\n\n\n<p>This will result in:</p>\n\n\n\n<p>This is a block level elementI am another block element</p>\n\n\n\n<h3>CONCLUSION</h3>\n\n\n\n<p>Other display values are grid and flexbox. These are broad topics we cannot discuss in short notes. However, they are both used for controlling the layout of a page. They are much more powerful than other display types used for positioning elements. They can shrink and stretch elements. They can centre content. They can be used to reorder elements and also align elements. While&nbsp;<code>display: grid</code>&nbsp;is container-based,&nbsp;<code>display: flex</code>&nbsp;is content based.</p>\n\n\n\n<p>There are tons of articles and courses where you can learn about these layouts. Here are some:</p>\n\n\n\n<p><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">A Complete Guide to Flexbox</a></p>\n\n\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\">Basic concepts of flexbox</a></p>\n\n\n\n<p><a href=\"https://cssgrid.io/\">Learn CSS Grid with Wes Bos</a></p>\n\n\n\n<p><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">A Complete Guide to Grid</a><br></p>\n","date":"October 09, 2019","author":{"name":"admin"},"featured_media":{"localFile":{"childImageSharp":{"resolutions":{"src":"/static/e21a63af1506eb52d4f19f517be5348f/44c9d/65493_4e7f_5.jpg","width":700,"height":400}}}}},"site":{"id":"Site","siteMetadata":{"title":"The Hon. Ephraim"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7989da18-ab36-5baa-af85-2bd6776d3eb7"}}}